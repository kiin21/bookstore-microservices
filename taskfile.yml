version: "3"

vars:
    GOOS: "{{default OS .GOOS}}"
    MVNW: '{{if eq .GOOS "windows"}}mvnw.cmd{{else}}./mvnw{{end}}'
    DC_DIR: "deployment/docker-compose"
    INFRA_DC_FILE: "{{.DC_DIR}}/infra.yml"
    APP_DC_FILE: "{{.DC_DIR}}/apps.yml"
    SLEEP_CMD: '{{if eq .GOOS "windows"}}timeout{{else}}sleep{{end}}'

tasks:
    default:
        cmds:
            - task: test

    test:
        deps:
            [format]
        cmds:
            - "{{.MVNW}} clean verify"

    format:
        cmds:
            - "{{.MVNW}} spotless:apply"

    build:
        cmds:
            - "docker image prune -f"
            - "{{.MVNW}} -pl config-server clean install -PbuildDocker -DskipTests"
            - "{{.MVNW}} -pl discovery-server clean install -PbuildDocker -DskipTests"
            - "{{.MVNW}} -pl catalog-service clean install -PbuildDocker -DskipTests"
            - "{{.MVNW}} -pl order-service clean install -PbuildDocker -DskipTests"
            - "{{.MVNW}} -pl notification-service clean install -PbuildDocker -DskipTests"
            - "{{.MVNW}} -pl api-gateway clean install -PbuildDocker -DskipTests"
            - "cd frontend && docker build --no-cache -t anhkhoa217/bookstore-frontend:latest ."

    build-single:
        desc: "Build Docker image for a single service. Usage: task build_single SERVICE=config-server"
        cmds:
            - "{{.MVNW}} -pl {{.SERVICE}} clean install -PbuildDocker -DskipTests"

    ### Infrastructure ###
    start-infra:
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} up -d"

    stop-infra:
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} stop"
            - "docker compose -f {{.INFRA_DC_FILE}} rm -f"

    restart-infra:
        cmds:
            - task: stop-infra
            - task: sleep
            - task: start-infra

    ### Push image ###
    push_images:
        cmds:
            - "docker push anhkhoa217/bookstore-config-server:latest"
            - "docker push anhkhoa217/bookstore-discovery-server:latest"
            - "docker push anhkhoa217/bookstore-order-service:latest"
            - "docker push anhkhoa217/bookstore-catalog-service:latest"
            - "docker push anhkhoa217/bookstore-notification-service:latest"
            - "docker push anhkhoa217/bookstore-api-gateway:latest"
            - "docker push anhkhoa217/bookstore-frontend:latest"

    restart-monitoring:
        cmds:
            - task: stop-monitoring
            - task: sleep
            - task: start-monitoring

    ### Main application ###
    fresh-start:
        deps: [format, build]
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} up -d"

    start:
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} up -d"

    fresh_stop:
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} stop"
            - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} rm -f"

    stop:
        cmds:
            - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} stop"

    restart:
        cmds:
            - task: stop
            - task: sleep
            - task: start

    fresh-restart:
        cmds:
            - task: fresh-stop
            - task: sleep
            - task: fresh-start
    ### Chore: sleep ###
    sleep:
        vars:
            DURATION: "{{default 5 .DURATION}}"
        cmds:
            - "{{.SLEEP_CMD}} {{.DURATION}}"

    clean:
        cmds:
            - docker system prune -af
            - docker volume prune -af
